<application>
  <component name="AppStorage">
    <histories>
      <item value="Comparison component.type == &quot;Dot&quot; may cause unexpected type coercion less... (⌘F1)  Inspection info: Reports usages of JavaScript equality operators which may cause unexpected type coercions. It is considered a good practice to use the type-safe equality operators === and !== instead of their regular counterparts == and !=. Depending on the option selected, this will either highlight: All usages of == and != operators. All usages except comparison with null. Some code styles allow using x == null as a replacement for x === null || x === undefined. Only suspicious expressions, such as: == or != comparisons to 0, '', null, true, false, or undefined." />
      <item value="Object instantiation can be simplified less... (⌘F1)  Inspection info: Checks for improper usage of wrappers for JavaScript primitive types. Also, warning will be produced when property of primitive type is modified, as assigned value will be lost." />
      <item value="Returned expression type string is not assignable to type 配置Json字符串 less... (⌘F1)  Inspection info: Checks JavaScript called function parameters , return values , assigned expressions to be of correct type. The validation works in JavaScript, html or jsp file" />
      <item value="同样id" />
      <item value="同样" />
      <item value="before Id" />
      <item value="id After" />
      <item value="适配器" />
      <item value="Adapeter" />
      <item value="_contextmenu" />
      <item value="drop" />
      <item value="droppable" />
      <item value="draggable" />
      <item value="ready" />
      <item value="Reports var declarations that are used instead of let or const. Both let and const are block-scoped and behave more strictly.  It helps to replace all var declarations with let or const declarations, depending on value semantics. Declarations might be moved to the top of the function or before the first usage of the variable to avoid Reference errors. Check Conservatively convert var with Fix all action option to prevent any changes in these complex cases when using Fix all action" />
      <item value="insdtead" />
      <item value="lvalue" />
      <item value="License" />
      <item value="licence" />
      <item value="Checks that jQuery selectors are used in an efficient way. It warns about duplicated selectors which could be cached and optionally about attribute and pseudo-selectors usa" />
      <item value="container" />
      <item value="open Contextmenu" />
      <item value="prevent Default" />
      <item value="global $, visoConfig, Mustache, uuid, jsPlumb" />
      <item value="height" />
      <item value="lambda" />
      <item value="_m Selected Component Type" />
      <item value="add-person" />
      <item value="Resize" />
      <item value="indefinite" />
      <item value="repeat Count" />
      <item value="scale" />
      <item value="rotate" />
      <item value="组件" />
      <item value="viso Config" />
      <item value="global" />
      <item value="sharp" />
      <item value="hash key" />
      <item value="C#" />
      <item value="octothorpe" />
      <item value="#" />
      <item value="clean" />
      <item value="empty" />
      <item value="stub" />
      <item value="foldback" />
      <item value="joinstyle" />
      <item value="stroke" />
      <item value="stroke Width" />
      <item value="Paint" />
      <item value="corner Radius" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="196" />
        <entry key="ENGLISH" value="196" />
        <entry key="FRENCH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="2" />
      </map>
    </option>
  </component>
</application>