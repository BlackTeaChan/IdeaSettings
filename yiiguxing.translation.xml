<application>
  <component name="AppStorage">
    <histories>
      <item value="Required" />
      <item value="Request" />
      <item value="not present" />
      <item value="Required List parameter 'keys' is not present" />
      <item value="java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986" />
      <item value="get Multiple" />
      <item value="得到多个" />
      <item value="gets" />
      <item value="get" />
      <item value="complete" />
      <item value="headless" />
      <item value="生成" />
      <item value="greate" />
      <item value="detach Every Connection" />
      <item value="detach All Connections" />
      <item value="detach" />
      <item value="unregister Endpoint" />
      <item value="delete Every Endpoint" />
      <item value="js Plumb Instance" />
      <item value="gets the size for the element, in an array : [ width, height ]." />
      <item value="Draggable" />
      <item value="ensure that, if the current container exists, it is a DOM element and not a selector. // if it does not exist and `candidate` is supplied, the offset parent of that element will be set as the Container. // this is used to do a better default behaviour for the case that the user has not set a container: // addEndpoint, makeSource, makeTarget and connect all call this method with the offsetParent of the // element in question (for connect it is the source element). So if no container is set, it is inferred // to be the offsetParent of the first element the user tries to connect. var" />
      <item value="exposed for other objects to use to get a unique id" />
      <item value="get some connections, specifying source/target/scope" />
      <item value="Thing" />
      <item value="reference" />
      <item value="params" />
      <item value="reference Params" />
      <item value="overlays" />
      <item value="_make Common Select Handler" />
      <item value="&quot;setHover&quot;, &quot;removeAllOverlays&quot;, &quot;setLabel&quot;, &quot;addClass&quot;, &quot;addOverlay&quot;, &quot;removeOverlay&quot;, &quot;removeOverlays&quot;, &quot;showOverlay&quot;, &quot;hideOverlay&quot;, &quot;showOverlays&quot;, &quot;hideOverlays&quot;, &quot;setPaintStyle&quot;, &quot;setHoverPaintStyle&quot;, &quot;setSuspendEvents&quot;, &quot;setParameter&quot;, &quot;setParameters&quot;, &quot;setVisible&quot;, &quot;repaint&quot;, &quot;addType&quot;, &quot;toggleType&quot;, &quot;removeType&quot;, &quot;removeClass&quot;, &quot;setType&quot;, &quot;bind&quot;, &quot;unbind&quot;" />
      <item value="helpers for select/selectEndpoints" />
      <item value="not public. but of course its exposed. how to change this." />
      <item value="Deletes a Connection. * @method deleteConnection * @param connection Connection to delete * @param {Object} [params] Optional delete parameters * @param {Boolean} [params.doNotFireEvent=false] If true, a connection detached event will not be fired. Otherwise one will. * @param {Boolean} [params.force=false] If true, the connection will be deleted even if a beforeDetach interceptor tries to stop the deletion. * @returns {Boolean} True if the connection was deleted, false otherwise." />
      <item value="check Condition" />
      <item value="before Detach" />
      <item value="is Detach Allowed" />
      <item value="source Id" />
      <item value="st Types" />
      <item value="animate" />
      <item value="add Endpoints" />
      <item value="add Endpoint" />
      <item value="Remove the given element, including cleaning up all endpoints registered for it. * This is exposed in the public API but also used internally by jsPlumb when removing the * element associated with a connection drag." />
      <item value="transparent" />
      <item value="joinstyle" />
      <item value="round" />
      <item value="jnode-round" />
      <item value="manifest" />
      <item value="mainfest" />
      <item value="mainface" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="132" />
        <entry key="ENGLISH" value="133" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
</application>